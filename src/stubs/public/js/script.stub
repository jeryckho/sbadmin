angular.module('[sbn]', ['ngRoute', 'ngResource', 'filters', 'angular-loading-bar'])

.controller('MainController', [ '$route', '$location', '$timeout', function ( $route, $location, $timeout) {
	var me = this;
	me.$route = $route;
	me.$location = $location;

	me.callAtTimeout = function() {
		window.location = '#/Dash';
	}

	$timeout( function(){ me.callAtTimeout(); }, 500);
}])

.controller('VoidController', function () {} )

.config([ '$routeProvider', '$locationProvider', function ($routeProvider, $locationProvider) {
	$routeProvider
	.otherwise({
		templateUrl : 'void.html',
		controller : 'VoidController',
		resolve : {
			stop : ['$q',function ($q) {
				var stop = $q.defer();
				stop.reject();
				return stop.promise;
			} ]
		}
	});

  // configure html5 to get links working on jsfiddle
	//  $locationProvider.html5Mode(true);
}])

.factory('Svc', [ '$resource', function( $resource ){
	var svc = {
		// Don't touch above
	};
	svc.findID = function( list, id ) {
		for ( var i=0; i<list.length; i++ ) {
			if ( list[i].id == id ) {
				return i;
			}
		}
		return false;
	};
	svc.Reset = function ( he, form, idx, init) {
		he.action = '';
		if (form) {
			form.$setPristine();
			form.$setUntouched();
		}
		if ( ( idx !== null ) && ( svc.findID( he.items, idx ) !== false ) ) {
			he.action = 'Modifier';
			he.toSend = angular.copy( he.items[ svc.findID( he.items, idx ) ] );
		} else {
			he.action = 'Ajouter';
			he.toSend = init;
		}

	};
	svc.checkErr = function( elem ) {
		if (elem) {
			if (elem.$touched && elem.$invalid) { return 'has-error'; }
			if (elem.$touched && elem.$valid) { return 'has-success'; }
		}
		return '';
	};
	svc.Send = function( he, form ) {
		if (he.action == 'Ajouter') {
			if (form.$valid) {
				svc[he.name].save( he.toSend, function(Res) {
					if (Res.result != 'fail') {
						he.items.push(Res);
						$('#myModal').modal('hide');
					} else {
						angular.forEach(Res.errors, function(value,key) {
							form['z'+key].$invalid = true;
							form.$invalid = true;
						});
					}
				});
			}
		} else {
			if (form.$valid) {
				var $lid = he.toSend.id;
				svc[he.name].update( { Id : $lid }, he.toSend, function(Res) {
					if (Res.result != 'fail') {
						for (var i = 0, len = he.items.length; i < len; i++) {
							if  (he.items[i].id === $lid) {
								he.items[i] = Res;
							}
						}
						$('#myModal').modal('hide');
					} else {
						angular.forEach(Res.errors, function(value,key) {
							form['z'+key].$invalid = true;
							form.$invalid = true;
						});
					}
				});
			}
		}
	};
	svc.toDel = function ( he, idx ) {
		svc[he.name].delete ( { Id : idx }, function (Res) {
			if ( ( Res.result == 'success' ) && ( svc.findID( he.items, idx ) !== false ) ) {
				he.items.splice( svc.findID( he.items, idx ) , 1);
			}
		});
	};
	return svc;
}]);
